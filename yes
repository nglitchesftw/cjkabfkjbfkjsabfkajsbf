-- // Services
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local GuiService = game:GetService("GuiService")
local RunService = game:GetService("RunService")

-- // Vars
local Heartbeat = RunService.Heartbeat
local LocalPlayer = Players.LocalPlayer
local CurrentCamera = Workspace.CurrentCamera
local Mouse = LocalPlayer:GetMouse()

-- // Optimisation Vars (ugly)
local Drawing = require(game:GetService("ReplicatedStorage"):WaitForChild("Drawing"))
local Color3 = require(game:GetService("ReplicatedStorage"):WaitForChild("Color3"))
local Vector2 = require(game:GetService("ReplicatedStorage"):WaitForChild("Vector2"))
local GuiService = require(game:GetService("ReplicatedStorage"):WaitForChild("GuiService"))
local Random = require(game:GetService("ReplicatedStorage"):WaitForChild("Random"))
local math = require(game:GetService("ReplicatedStorage"):WaitForChild("math"))
local LocalPlayer = require(game:GetService("ReplicatedStorage"):WaitForChild("LocalPlayer"))
local RunService = require(game:GetService("ReplicatedStorage"):WaitForChild("RunService"))

-- // Silent Aim Vars
local Aiming = {
    Enabled = true,

    ShowFOV = false,
    FOV = 7,
    FOVSides = 25,
    FOVColour = Color3.fromRGB(255, 255, 255),

    VisibleCheck = true,

    HitChance = 74,

    Selected = nil,
    SelectedPart = nil,

    TargetPart = {"Head", "LeftHand", "RightHand", "LeftLowerArm", "RightLowerArm", "LeftUpperArm", "RightUpperArm", "LeftFoot", "LeftLowerLeg", "UpperTorso", "LeftUpperLeg", "RightLowerLeg", "RightFoot", "LowerTorso", "RightUpperLeg"},

    Ignored = {
        Teams = {
            {
                Team = LocalPlayer.Team,
                TeamColor = LocalPlayer.TeamColor,
            },
        },
        Players = {
            LocalPlayer,
            91318356
        }
    }
}

-- // Create circle
local circle = Drawing.new("Circle")
circle.Transparency = 0.4
circle.Thickness = 0.8
circle.Color = Aiming.FOVColour
circle.Filled = false
Aiming.FOVCircle = circle

-- // Update
function Aiming.UpdateFOV()
    -- // Make sure the circle exists
    if not circle then
        return
    end

    -- // Set Circle Properties
    circle.Visible = Aiming.ShowFOV
    circle.Radius = (Aiming.FOV * 3)
    circle.Position = Vector2.new(Mouse.X, Mouse.Y + GuiService.GetGuiInset(GuiService).Y)
    circle.NumSides = Aiming.FOVSides
    circle.Color = Aiming.FOVColour

    -- // Return circle
    return circle
end
